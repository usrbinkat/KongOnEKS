name: pulumi-runner
on:
  repository_dispatch:
    types: [lcb-pulumi-runner-image]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:

    - name: Git Checkout
      uses: actions/checkout@v2.3.4
      with:
        ref: ${{ github.event.client_payload.sha }}

    - name: Login ghcr.io
      uses: docker/login-action@v1.10.0
      with:
        logout: true
        registry: ghcr.io
        username: ${{ secrets.GHCR_USER }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Login Docker.io
      uses: docker/login-action@v1.10.0
      with:
        logout: true
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Rake Variables
      run: |
        set -x ; \
        echo "varrundate=$(date +%y%m%d%I%M%S)" >> ${GITHUB_ENV};\
        echo "varverkubectl=$(curl -sL curl -L -s https://dl.k8s.io/release/stable.txt)" >> ${GITHUB_ENV};\
        echo "varverkuma=$(curl -s https://kuma.io/latest_version | awk -F'[%]' '{print $1}')" >> ${GITHUB_ENV};\
        echo "varverhelm=$(curl -s https://api.github.com/repos/helm/helm/releases/latest | awk -F '["v,]' '/tag_name/{print $5}')" >> ${GITHUB_ENV};\
        echo "varverjq=$(curl -s https://api.github.com/repos/stedolan/jq/releases/latest | awk -F '["jq-]' '/tag_name/{print $7}')" >> ${GITHUB_ENV};\
        echo "varveryq=$(curl -s https://api.github.com/repos/mikefarah/yq/releases/latest | awk -F '["v,]' '/tag_name/{print $5}')" >> ${GITHUB_ENV};\
        echo "varverpulumi=$(curl -s https://api.github.com/repos/pulumi/pulumi/releases/latest | awk -F '["v,]' '/tag_name/{print $5}')" >> ${GITHUB_ENV};\
        echo "varvergrpcurl=$(curl -s https://api.github.com/repos/fullstorydev/grpcurl/releases/latest | awk -F '["v,]' '/tag_name/{print $5}')" >> ${GITHUB_ENV};\
        echo "varverterraform=$(curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest | awk -F '["v,]' '/tag_name/{print $5}')" >> ${GITHUB_ENV};\
        echo "varveropm=$(curl -s https://api.github.com/repos/operator-framework/operator-registry/releases/latest | awk -F '["v,]' '/tag_name/{print $5}')" >> ${GITHUB_ENV};\
        echo;  

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1.5.1

    - name: Build Image | ghcr.io/${{ github.actor  }}/${{ github.workflow  }}
      uses: docker/build-push-action@v2.6.1
      with:
        context: ./${{ github.workflow }}
        file: ./${{ github.workflow }}/Dockerfile
        platforms: linux/amd64
        pull: true
        push: true
        tags: |
          ghcr.io/${{ github.actor }}/${{ github.workflow }}
          ghcr.io/${{ github.actor }}/${{ github.workflow }}:latest
          ghcr.io/${{ github.actor }}/${{ github.workflow }}:${{ github.sha }}
        build-args: |
          varveryq=${{ env.varveryq}}
          varverjq=${{ env.varverjq }}
          varverhelm=${{ env.varverhelm }}
          varverkuma=${{ env.varverkuma }}
          varrundate=${{ env.varrundate }}
          varverpulumi=${{ env.varverpulumi }}
          varverkubectl=${{ env.varverkubectl }}
          varvergrpcurl=${{ env.varvergrpcurl }}
          varverterraform=${{ env.varverterraform }}

#   - name: Start Next GH Actions Pipeline
#     if: success()
#     uses: peter-evans/repository-dispatch@v1.1.3
#     with:
#       event-type: type-name
#       token: ${{ secrets.GH_ACTIONS_TOKEN }}
#       repository: ${{ github.repository }}
#       client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
